<?xml version="1.0" encoding="utf-8"?>
<feed xmlns="http://www.w3.org/2005/Atom">

  <title><![CDATA[Spenser Jones]]></title>
  <link href="http://SpenserJ.github.io/atom.xml" rel="self"/>
  <link href="http://SpenserJ.github.io/"/>
  <updated>2013-07-13T17:16:17-06:00</updated>
  <id>http://SpenserJ.github.io/</id>
  <author>
    <name><![CDATA[Spenser Jones]]></name>
    
  </author>
  <generator uri="http://octopress.org/">Octopress</generator>

  
  <entry>
    <title type="html"><![CDATA[Setting up NSD3 for DNS]]></title>
    <link href="http://SpenserJ.github.io/blog/2013/07/12/setting-up-nsd3-for-dns/"/>
    <updated>2013-07-12T11:31:00-06:00</updated>
    <id>http://SpenserJ.github.io/blog/2013/07/12/setting-up-nsd3-for-dns</id>
    <content type="html"><![CDATA[<p>There are two major players in the Domain Name System server market: <a href="https://www.isc.org/downloads/bind/">Bind</a> and <a href="https://www.nlnetlabs.nl/projects/nsd/">NSD</a>. The former has been around since the 1980s and makes up a majority of the installations in use today, while the latter saw its first release around the turn of the century, and is designed to be purely authoritative (incapable of recursive DNS queries). While selecting a DNS server for <a href="https://ambrose.edu">Ambrose University College</a>, NSD&rsquo;s ability to easily run from a Chroot, and its lightweight footprint (currently using 69MB of RAM for the entire server), easily won our vote. Furthermore, NSD can make use of BIND&rsquo;s zonefiles, and the migration from our old server was complete in a matter of minutes.</p>

<!-- more -->


<h2>Securing your server</h2>

<p>Logging in as root is a surefire way to let hackers into your box, so lets begin by creating a new user, adding them to an admin group for sudo.</p>

<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
<span class='line-number'>6</span>
<span class='line-number'>7</span>
<span class='line-number'>8</span>
<span class='line-number'>9</span>
<span class='line-number'>10</span>
<span class='line-number'>11</span>
<span class='line-number'>12</span>
<span class='line-number'>13</span>
<span class='line-number'>14</span>
<span class='line-number'>15</span>
<span class='line-number'>16</span>
<span class='line-number'>17</span>
<span class='line-number'>18</span>
<span class='line-number'>19</span>
<span class='line-number'>20</span>
<span class='line-number'>21</span>
<span class='line-number'>22</span>
<span class='line-number'>23</span>
</pre></td><td class='code'><pre><code class=''><span class='line'>$ sudo addgroup admin
</span><span class='line'>Adding group 'admin' (GID 1001)
</span><span class='line'>Done.
</span><span class='line'>
</span><span class='line'>$ sudo adduser spenserj
</span><span class='line'>Adding user `spenserj' ...
</span><span class='line'>Adding new group `spenserj' (1002) ...
</span><span class='line'>Adding new user `spenserj' (1001) with group `spenserj' ...
</span><span class='line'>Creating home directory `/home/spenserj' ...
</span><span class='line'>Copying files from `/etc/skel' ...
</span><span class='line'>Enter new UNIX password:
</span><span class='line'>Retype new UNIX password:
</span><span class='line'>passwd: password updated successfully
</span><span class='line'>Changing the user information for spenserj
</span><span class='line'>Enter the new value, or press ENTER for the default
</span><span class='line'>    Full Name []: Spenser Jones
</span><span class='line'>    Room Number []:
</span><span class='line'>    Work Phone []:
</span><span class='line'>    Home Phone []:
</span><span class='line'>    Other []:
</span><span class='line'>Is the information correct? [Y/n] y
</span><span class='line'>
</span><span class='line'>$ sudo usermod -a -G admin spenserj</span></code></pre></td></tr></table></div></figure>


<p>You&rsquo;ll also want to create a private key on your computer, and disable that pesky password authentication on the server.</p>

<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
</pre></td><td class='code'><pre><code class=''><span class='line'>$ mkdir ~/.ssh
</span><span class='line'>$ echo "ssh-rsa [your public key]" &gt; ~/.ssh/authorized_keys</span></code></pre></td></tr></table></div></figure>




<figure class='code'><figcaption><span>/etc/ssh/sshd_config</span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
</pre></td><td class='code'><pre><code class=''><span class='line'>PermitRootLogin no
</span><span class='line'>PasswordAuthentication no
</span><span class='line'>AllowUsers spenserj</span></code></pre></td></tr></table></div></figure>


<p>Reload SSH to apply the changes, and then try logging in <strong>in a new session</strong> to ensure everything worked. If you can&rsquo;t log in, you&rsquo;ll still have your original session to fix things up.</p>

<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
</pre></td><td class='code'><pre><code class=''><span class='line'>$ sudo service ssh restart
</span><span class='line'>ssh stop/waiting
</span><span class='line'>ssh start/running, process 1599</span></code></pre></td></tr></table></div></figure>


<h3>Update the server</h3>

<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
<span class='line-number'>6</span>
<span class='line-number'>7</span>
<span class='line-number'>8</span>
<span class='line-number'>9</span>
<span class='line-number'>10</span>
<span class='line-number'>11</span>
<span class='line-number'>12</span>
<span class='line-number'>13</span>
<span class='line-number'>14</span>
<span class='line-number'>15</span>
<span class='line-number'>16</span>
<span class='line-number'>17</span>
<span class='line-number'>18</span>
<span class='line-number'>19</span>
<span class='line-number'>20</span>
<span class='line-number'>21</span>
<span class='line-number'>22</span>
<span class='line-number'>23</span>
<span class='line-number'>24</span>
<span class='line-number'>25</span>
<span class='line-number'>26</span>
<span class='line-number'>27</span>
<span class='line-number'>28</span>
<span class='line-number'>29</span>
<span class='line-number'>30</span>
<span class='line-number'>31</span>
<span class='line-number'>32</span>
<span class='line-number'>33</span>
<span class='line-number'>34</span>
</pre></td><td class='code'><pre><code class=''><span class='line'>$ sudo apt-get update
</span><span class='line'>...
</span><span class='line'>Hit http://ca.archive.ubuntu.com precise-updates/universe Translation-en_CA
</span><span class='line'>Hit http://ca.archive.ubuntu.com precise-updates/universe Translation-en
</span><span class='line'>Hit http://ca.archive.ubuntu.com precise-backports/main Translation-en
</span><span class='line'>Hit http://ca.archive.ubuntu.com precise-backports/multiverse Translation-en
</span><span class='line'>Hit http://ca.archive.ubuntu.com precise-backports/restricted Translation-en
</span><span class='line'>Hit http://ca.archive.ubuntu.com precise-backports/universe Translation-en
</span><span class='line'>Fetched 3,285 kB in 5s (573 kB/s)
</span><span class='line'>Reading package lists... Done
</span><span class='line'>
</span><span class='line'>$ sudo apt-get upgrade
</span><span class='line'>Reading package lists... Done
</span><span class='line'>Building dependency tree
</span><span class='line'>Reading state information... Done
</span><span class='line'>The following packages have been kept back:
</span><span class='line'>  linux-headers-generic-lts-quantal linux-image-generic-lts-quantal
</span><span class='line'>The following packages will be upgraded:
</span><span class='line'>  accountsservice apport apt apt-transport-https apt-utils aptitude bash ...
</span><span class='line'>73 upgraded, 0 newly installed, 0 to remove and 2 not upgraded.
</span><span class='line'>Need to get 61.0 MB of archives.
</span><span class='line'>After this operation, 151 kB of additional disk space will be used.
</span><span class='line'>Do you want to continue [Y/n]? Y
</span><span class='line'>...
</span><span class='line'>Setting up libisc83 (1:9.8.1.dfsg.P1-4ubuntu0.6) ...
</span><span class='line'>Setting up libdns81 (1:9.8.1.dfsg.P1-4ubuntu0.6) ...
</span><span class='line'>Setting up libisccc80 (1:9.8.1.dfsg.P1-4ubuntu0.6) ...
</span><span class='line'>Setting up libisccfg82 (1:9.8.1.dfsg.P1-4ubuntu0.6) ...
</span><span class='line'>Setting up libbind9-80 (1:9.8.1.dfsg.P1-4ubuntu0.6) ...
</span><span class='line'>Setting up liblwres80 (1:9.8.1.dfsg.P1-4ubuntu0.6) ...
</span><span class='line'>Setting up bind9-host (1:9.8.1.dfsg.P1-4ubuntu0.6) ...
</span><span class='line'>Setting up dnsutils (1:9.8.1.dfsg.P1-4ubuntu0.6) ...
</span><span class='line'>Setting up iptables (1.4.12-1ubuntu5) ...
</span><span class='line'>...</span></code></pre></td></tr></table></div></figure>


<h2>Install NSD</h2>

<p>NSD will start as soon as you install it, and complain if you don&rsquo;t have a config file created already, so we&rsquo;ll create a blank file for now.</p>

<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
<span class='line-number'>6</span>
<span class='line-number'>7</span>
<span class='line-number'>8</span>
<span class='line-number'>9</span>
<span class='line-number'>10</span>
<span class='line-number'>11</span>
<span class='line-number'>12</span>
<span class='line-number'>13</span>
<span class='line-number'>14</span>
<span class='line-number'>15</span>
<span class='line-number'>16</span>
<span class='line-number'>17</span>
<span class='line-number'>18</span>
<span class='line-number'>19</span>
<span class='line-number'>20</span>
<span class='line-number'>21</span>
<span class='line-number'>22</span>
</pre></td><td class='code'><pre><code class=''><span class='line'>$ sudo mkdir /etc/nsd3
</span><span class='line'>$ sudo touch /etc/nsd3/nsd.conf
</span><span class='line'>$ sudo apt-get install nsd3
</span><span class='line'>Reading package lists... Done
</span><span class='line'>Building dependency tree
</span><span class='line'>Reading state information... Done
</span><span class='line'>The following NEW packages will be installed:
</span><span class='line'>  nsd3
</span><span class='line'>0 upgraded, 1 newly installed, 0 to remove and 2 not upgraded.
</span><span class='line'>Need to get 931 kB of archives.
</span><span class='line'>After this operation, 1,672 kB of additional disk space will be used.
</span><span class='line'>Get:1 http://ca.archive.ubuntu.com/ubuntu/ precise/universe nsd3 amd64 3.2.9-1 [931 kB]
</span><span class='line'>Fetched 931 kB in 1s (491 kB/s)
</span><span class='line'>Selecting previously unselected package nsd3.
</span><span class='line'>(Reading database ... 49711 files and directories currently installed.)
</span><span class='line'>Unpacking nsd3 (from .../nsd3_3.2.9-1_amd64.deb) ...
</span><span class='line'>Processing triggers for ureadahead ...
</span><span class='line'>Processing triggers for man-db ...
</span><span class='line'>Setting up nsd3 (3.2.9-1) ...
</span><span class='line'>grep: /etc/aliases: No such file or directory
</span><span class='line'> * Building nsd3 zones... [ OK ]
</span><span class='line'> * Starting nsd3...       [ OK ]</span></code></pre></td></tr></table></div></figure>


<h3>Give yourself access to <code>/etc/nsd3</code></h3>

<p>By default, you won&rsquo;t have access to <code>/etc/nsd3</code> without working as root, and running as root is bad form, so let&rsquo;s add the nsd group to our account. We probably have some kernel updates that need to be applied, and we need to relogin for the group to apply, so this is the perfect time to reboot our server as well.</p>

<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
<span class='line-number'>6</span>
</pre></td><td class='code'><pre><code class=''><span class='line'>$ sudo usermod -a -G nsd spenserj
</span><span class='line'>$ sudo reboot now
</span><span class='line'>Broadcast message from spenserj@dnsmaster
</span><span class='line'>    (/dev/pts/0) at 17:23 ...
</span><span class='line'>
</span><span class='line'>The system is going down for reboot NOW!</span></code></pre></td></tr></table></div></figure>


<h2>Configure NSD</h2>

<h3>Configure NSD as a Master</h3>

<p>You&rsquo;ll find a sample configuration at <code>/etc/nsd3/nsd.conf.sample</code>, and <a href="http://linux.die.net/man/5/nsd.conf">man nsd.conf</a> is a great place to find more information. The config is quite simplistic though, and I was un and running in minutes.</p>

<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
<span class='line-number'>6</span>
<span class='line-number'>7</span>
<span class='line-number'>8</span>
<span class='line-number'>9</span>
<span class='line-number'>10</span>
<span class='line-number'>11</span>
<span class='line-number'>12</span>
<span class='line-number'>13</span>
<span class='line-number'>14</span>
<span class='line-number'>15</span>
<span class='line-number'>16</span>
<span class='line-number'>17</span>
<span class='line-number'>18</span>
<span class='line-number'>19</span>
<span class='line-number'>20</span>
<span class='line-number'>21</span>
<span class='line-number'>22</span>
<span class='line-number'>23</span>
<span class='line-number'>24</span>
<span class='line-number'>25</span>
<span class='line-number'>26</span>
<span class='line-number'>27</span>
<span class='line-number'>28</span>
<span class='line-number'>29</span>
<span class='line-number'>30</span>
<span class='line-number'>31</span>
<span class='line-number'>32</span>
</pre></td><td class='code'><pre><code class=''><span class='line'>server:
</span><span class='line'>  logfile: "/var/log/nsd.log"
</span><span class='line'>  username: nsd
</span><span class='line'>  hide-version: yes
</span><span class='line'>  identity: "ns1.ambrose.edu"
</span><span class='line'>
</span><span class='line'># Primary ambrose.edu Forward Lookup Zone
</span><span class='line'>zone:
</span><span class='line'>  name: ambrose.edu
</span><span class='line'>  zonefile: forward/ambrose.edu.zone
</span><span class='line'>
</span><span class='line'>  notify:      dnsslave1 NOKEY
</span><span class='line'>  provide-xfr: dnsslave1 NOKEY
</span><span class='line'>
</span><span class='line'>  notify:      dnsslave2 slave2key
</span><span class='line'>  provide-xfr: dnsslave2 slave2key
</span><span class='line'>
</span><span class='line'># Shaw Reverse Lookup Zone
</span><span class='line'>zone:
</span><span class='line'>  name: 237.244.66.in-addr.arpa
</span><span class='line'>  zonefile: reverse/66.244.237.zone
</span><span class='line'>
</span><span class='line'>  notify:      dnsslave1 NOKEY
</span><span class='line'>  provide-xfr: dnsslave1 NOKEY
</span><span class='line'>
</span><span class='line'>  notify:      dnsslave2 slave2key
</span><span class='line'>  provide-xfr: dnsslave2 slave2key
</span><span class='line'>
</span><span class='line'>key:
</span><span class='line'>  name: slave2key
</span><span class='line'>  algorithm: hmac-md5
</span><span class='line'>  secret: "95hP9OTvHID2jJO2GNaeuw=="</span></code></pre></td></tr></table></div></figure>


<h3>Configure NSD as a Slave</h3>

<p>The slave configuration is nearly identical to the master, with the only change being the <code>notify</code> and <code>provide-xfr</code> lines changing to the slave-variant. Each zone is required to have a zonefile, but you don&rsquo;t need to fill it out if it pulls from the master, so I just touched each file and left it empty.</p>

<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
<span class='line-number'>6</span>
</pre></td><td class='code'><pre><code class=''><span class='line'>zone:
</span><span class='line'>  name: ambrose.edu
</span><span class='line'>  zonefile: forward/ambrose.edu.zone
</span><span class='line'>
</span><span class='line'>  allow-notify:      dnsmaster NOKEY
</span><span class='line'>  request-xfr:  AXFR dnsmaster NOKEY</span></code></pre></td></tr></table></div></figure>


<h3>Zonefiles</h3>

<p>NSD uses BIND zonefiles, and there is a plethora of documentation and guides on how to write one, so hit up your favourite search engine and you&rsquo;ll be on your way. Don&rsquo;t forget to update the SOA Serial whenever you make a change, otherwise the next step won&rsquo;t work.</p>

<h3>Applying your configuration changes</h3>

<p>If you&rsquo;ve modified your <code>nsd.conf</code>, you&rsquo;ll need to restart NSD.</p>

<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
</pre></td><td class='code'><pre><code class=''><span class='line'>$ sudo nsdc restart</span></code></pre></td></tr></table></div></figure>


<p>Otherwise, changes to zonefiles require the zone database to be rebuilt and reloaded.</p>

<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
</pre></td><td class='code'><pre><code class=''><span class='line'>$ sudo nsdc rebuild
</span><span class='line'>$ sudo nsdc reload</span></code></pre></td></tr></table></div></figure>


<p>If you have any slaves configured, be sure to check your logs for errors. If you don&rsquo;t set the server verbosity to 1 (incoming notifies/transfers) or 2 (soft warnings), and don&rsquo;t receive an error, it is likely working.</p>

<h2>Confirming your Master/Slave zones</h2>

<p>Dig is a wonderful tool when testing DNS changes. Check the forward and reverse zones of each of your nameservers, and make sure the serial and information matches. Then update the serial on your master, rebuild/reload, and check the slave again.</p>

<figure class='code'><figcaption><span>Check a Forward Zone</span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
</pre></td><td class='code'><pre><code class=''><span class='line'>$ dig @ns2.ambrose.edu +nocmd mail.ambrose.edu any +multiline +noall +answer
</span><span class='line'>mail.ambrose.edu.       10800 IN A 66.244.237.42</span></code></pre></td></tr></table></div></figure>




<figure class='code'><figcaption><span>Check a Reverse Zone</span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
<span class='line-number'>6</span>
<span class='line-number'>7</span>
<span class='line-number'>8</span>
<span class='line-number'>9</span>
<span class='line-number'>10</span>
<span class='line-number'>11</span>
<span class='line-number'>12</span>
</pre></td><td class='code'><pre><code class=''><span class='line'>$ dig @ns2.ambrose.edu +nocmd 237.244.66.in-addr.arpa. any +multiline +noall +answer
</span><span class='line'>237.244.66.in-addr.arpa. 10800 IN SOA ns1.ambrose.edu. helpdesk.ambrose.edu. (
</span><span class='line'>                                2013071201 ; serial
</span><span class='line'>                                604800     ; refresh (1 week)
</span><span class='line'>                                86400      ; retry (1 day)
</span><span class='line'>                                2419200    ; expire (4 weeks)
</span><span class='line'>                                604800     ; minimum (1 week)
</span><span class='line'>                                )
</span><span class='line'>237.244.66.in-addr.arpa. 10800 IN NS ns1.
</span><span class='line'>
</span><span class='line'>$ dig @ns2.ambrose.edu +nocmd 42.237.244.66.in-addr.arpa. any +multiline +noall +answer
</span><span class='line'>42.237.244.66.in-addr.arpa. 10800 IN PTR mail.ambrose.edu.</span></code></pre></td></tr></table></div></figure>


<h2>Get a second opinion</h2>

<p>There are quite a few automated tests that will check the responses from your nameservers, and ensure everything is in working order. I found that <a href="http://dnscheck.pingdom.com/">Pingdom</a>, the <a href="http://dnscheck.iis.se/">Swedish Internet Infrastructure Foundation</a>, and <a href="http://www.intodns.com/">IntoDNS</a> were extremely helpful.</p>
]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[Testing, 1 2 3. This is a test.]]></title>
    <link href="http://SpenserJ.github.io/blog/2013/07/12/testing-1-2-3-this-is-a-test/"/>
    <updated>2013-07-12T10:54:00-06:00</updated>
    <id>http://SpenserJ.github.io/blog/2013/07/12/testing-1-2-3-this-is-a-test</id>
    <content type="html"><![CDATA[<p>I&rsquo;ve decided to give <a href="http://octopress.org/">Octopress</a> a chance, and so far I&rsquo;m enjoying it far more than <a href="https://drupal.org/">Drupal</a>. While a content management framework is great, I&rsquo;ve always found that there is far too much bloat for it to be used as a blogging platform. On top of that, <a href="http://daringfireball.net/projects/markdown/">Markdown</a> is a fantastic language, and being able to easily write beautiful code through it is extremely enticing.</p>

<p>Only time will tell if this results in me posting more frequently, but I&rsquo;m optimistic.</p>
]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[Building the Science Lab]]></title>
    <link href="http://SpenserJ.github.io/blog/2013/05/14/building-the-science-lab/"/>
    <updated>2013-05-14T19:53:00-06:00</updated>
    <id>http://SpenserJ.github.io/blog/2013/05/14/building-the-science-lab</id>
    <content type="html"><![CDATA[<p>There have been a significant number of bugs with the <a href="http://pecl.php.net/package/APC">Alternative PHP Cache (APC)</a> over the past year, causing me to pass over PHP updates for fear of segfaults, however that has finally come to an end. APC is still just as buggy, but <a href="https://wiki.php.net/rfc/optimizerplus">PHP 5.5</a> will be bringing <a href="http://pecl.php.net/package/ZendOpcache">Zend OPCache</a> to the core, so I&rsquo;ve decided to transition early and configure the PECL package. As Zend OPCache does not come with a User Cache, I decided to set up Memcache on the <a href="https://ambrose.edu/">Ambrose University College</a> Drupal website, and was seeing benchmarks of around 65 requests per second (up from 30-35 req/sec with APC only).</p>

<p>As <a href="https://github.com/krakjoe/apcu">APCu</a> (userland caching) continues to branch from the crusty old APC branch, and the old APC Opcaching code is remove, I&rsquo;ll be running a few tests to see whether APCu can bring more to the table than Memcache can, as I have no need for the distributed functionality that Memcache provides.</p>
]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[Spring Cleaning]]></title>
    <link href="http://SpenserJ.github.io/blog/2013/05/14/spring-cleaning/"/>
    <updated>2013-05-14T13:39:00-06:00</updated>
    <id>http://SpenserJ.github.io/blog/2013/05/14/spring-cleaning</id>
    <content type="html"><![CDATA[<p>I&rsquo;ve decided to wipe out a few years worth of hastily written blog posts and start fresh. Fitting, given that I&rsquo;m also switching to <a href="http://spenserj.com">SpenserJ.com</a> as my domain name, after waiting for it to expire for the better part of two years. My vision is for this site to be a landing zone for the various ideas and tweaks that come to me every week.</p>
]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[Building your first Adium Plugin]]></title>
    <link href="http://SpenserJ.github.io/blog/2010/08/13/building-your-first-adium-plugin/"/>
    <updated>2010-08-13T16:51:00-06:00</updated>
    <id>http://SpenserJ.github.io/blog/2010/08/13/building-your-first-adium-plugin</id>
    <content type="html"><![CDATA[<p><strong>This guide is extremely outdated. It was originally authored on August 13th, 2010, and has not been updated recently.</strong></p>

<p><em>As a warning, Adium Plugins use internal Adium APIs, which sometimes change. If you build a plugin, it may break with future versions of Adium, so be prepared for some upkeep down the road, unless you want to be rude and build a great program, and then abandon it and all of its users.</em> This guide assumes that you understand the basics of Objective-C, XCode, and programming in general. If you don&rsquo;t meet one of these prerequisites, please go research the basics and then come back.</p>

<h2>Step 1: Compiling Adium</h2>

<p>Before you can start coding a plugin, you need the Adium plugin framework. To get this, download and build Adium from <a href="http://trac.adium.im/wiki/GettingNewestAdiumSource">http://trac.adium.im/wiki/GettingNewestAdiumSource</a>. Be sure to download the version that most of your plugin&rsquo;s users will be using (e.g. stable). If you cannot complete this step without googling, I would suggest learning the basics of Objective-C and XCode, among other things, first.</p>

<h2>Step 2: Creating your plugin&rsquo;s project</h2>

<p>Open the <code>New Project</code> window, choose <code>Framework &amp; Library</code>, choose <code>Bundle</code>, and set the Framework to <code>Cocoa</code>.
Right click on your Bundle under the <code>Targets</code> section of the sidebar, and choose <code>Get Info</code>. Go to the properties tab, and set the <code>Principle Class</code> to the same as your plugin name (I&rsquo;m using MyFirstAdiumPlugin). Also, set your identifier, which is normally the reverse of your domain. Since my domain is SpenserJones.com, I will use com.spenserjones.MyFirstAdiumPlugin. Finally, set the <code>Creator</code> code to <code>AdIM</code>, and confirm that the Type is <code>BNDL</code>.
Under the Build tab of the Info window, change the following settings:</p>

<table width="100%">
<tbody>
<tr><th style="text-align: center;">Setting</th><th style="text-align: center;">Value</th></tr>
<tr>
<td>Wrapper Extension</td>
<td>AdiumPlugin</td>
</tr>
<tr>
<td>Installation Directory</td>
<td>`$(HOME)/Library/Application Support/Adium 2.0/PlugIns/`</td>
</tr>
<tr>
<td>Base SDK</td>
<td>Mac OS X 10.5 (or the lowest version of Mac OS X you can set it to)</td>
</tr>
</tbody>
</table>


<p>Finally, drag <code>$(ADIUM)/build/Development/Adium.framework</code> (where $(ADIUM) is the directory where you checked out Adium) into <code>Frameworks and Libraries/Other Frameworks</code> in the sidebar of XCode. When prompted, check the <code>Copy items into destination group's folder (if needed)</code> and <code>Recursively create groups for any added folders.</code></p>

<h2>Step 3: Writing the code</h2>

<p>Click on the folder <code>Classes</code> in the left pane of the main window of XCode, and then click <code>File - New File</code> (CMD-N). Choose <code>Cocoa Class</code> and then <code>Objective-C class</code>. Leave the subclass as <code>NSObject</code>, as we will be changing this shortly. Name the file the same name as your plugin, and check the <code>Also create \*.h</code> box.
Open up <code>MyFirstAdiumPlugin.h</code>, and add an import line of <code>#import &lt;Adium/AIPlugin.h&gt;</code> and also change <code>MyFirstAdiumPlugin : NSObject</code> to <code>MyFirstAdiumPlugin : NSObject &lt;AIPlugin&gt;</code>
Create two void functions in <code>MyFirstAdiumPlugin.m</code> called installPlugin and uninstallPlugin.  After doing these steps, your code should look like:</p>

<figure class='code'><figcaption><span>MyFirstAdiumPlugin.h</span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
<span class='line-number'>6</span>
<span class='line-number'>7</span>
<span class='line-number'>8</span>
<span class='line-number'>9</span>
</pre></td><td class='code'><pre><code class='obj-c'><span class='line'><span class="cp">#import &lt;Cocoa/Cocoa.h&gt;</span>
</span><span class='line'><span class="cp">#import &lt;Adium/AIPlugin.h&gt;</span>
</span><span class='line'>
</span><span class='line'><span class="k">@interface</span> <span class="nc">MyFirstAdiumPlugin</span> : <span class="nc">NSObject</span> <span class="o">&lt;</span><span class="n">AIPlugin</span><span class="o">&gt;</span> <span class="p">{</span>
</span><span class='line'>
</span><span class='line'>
</span><span class='line'><span class="p">}</span>
</span><span class='line'>
</span><span class='line'><span class="k">@end</span>
</span></code></pre></td></tr></table></div></figure>




<figure class='code'><figcaption><span>MyFirstAdiumPlugin.m</span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
<span class='line-number'>6</span>
<span class='line-number'>7</span>
<span class='line-number'>8</span>
<span class='line-number'>9</span>
<span class='line-number'>10</span>
<span class='line-number'>11</span>
<span class='line-number'>12</span>
<span class='line-number'>13</span>
<span class='line-number'>14</span>
<span class='line-number'>15</span>
<span class='line-number'>16</span>
<span class='line-number'>17</span>
</pre></td><td class='code'><pre><code class='obj-c'><span class='line'><span class="cp">#import &quot;MyFirstAdiumPlugin.h&quot;</span>
</span><span class='line'>
</span><span class='line'><span class="k">@implementation</span> <span class="nc">MyFirstAdiumPlugin</span>
</span><span class='line'>
</span><span class='line'><span class="k">-</span> <span class="p">(</span><span class="kt">void</span><span class="p">)</span><span class="nf">installPlugin</span>
</span><span class='line'><span class="p">{</span>
</span><span class='line'>
</span><span class='line'>
</span><span class='line'><span class="p">}</span>
</span><span class='line'>
</span><span class='line'><span class="k">-</span> <span class="p">(</span><span class="kt">void</span><span class="p">)</span><span class="nf">uninstallPlugin</span>
</span><span class='line'><span class="p">{</span>
</span><span class='line'>
</span><span class='line'>
</span><span class='line'><span class="p">}</span>
</span><span class='line'>
</span><span class='line'><span class="k">@end</span>
</span></code></pre></td></tr></table></div></figure>


<p>Before you get too excited about having coded a plugin, there is one more step. Open <code>Info.plist</code> and add the following line, replacing <code>{VERSION}</code> with the version of Adium you compiled: <code>&lt;key&gt;AIMinimumAdiumVersionRequirement&lt;/key&gt; &lt;string&gt;{VERSION}&lt;/string&gt;</code></p>

<p>As of writing this, the release version is 1.3, while the beta is 1.4. Adium 1.4 will require users to have Leopard or better, while 1.3 requires Tiger.</p>

<h2>Step 4: Bask in the glory of your first Adium plugin</h2>

<p>All that is left is to compile and install your first Adium plugin. Click build, confirm that there are no errors, and then double-click <code>MyFirstAdiumPlugin/build/Debug/MyFirstAdiumPlugin.AdiumPlugin</code> from Finder.</p>

<h2>Step 5: Add some functionality</h2>

<p>I&rsquo;d assume that you want a plugin that actually DOES something, instead of sits pretty in your plugins folder, right? Adium&rsquo;s documentation for plugin creation is fairly sparse (and always has been), however there is a map of Adium&rsquo;s API at <a href="http://trac.adium.im/wiki/MapOfAdium">http://trac.adium.im/wiki/MapOfAdium</a>, and plenty of plugins online that you can examine. Hopefully I will find time soon to write up a continuation of this guide, for adding functionality. If you use this guide to create a plugin, I&rsquo;d love it if you would share what you&rsquo;ve done in the comments below!</p>
]]></content>
  </entry>
  
</feed>
